import ToggleButton from './ToggleButton';
import React from 'react';

interface CardProps {
  id: string; // generated by Astro
  title: string;
  author: string;
  description?: string;
  coverUrl?: string;
  externalUrl?: string;
  icon?: 'book'|'blogpost'|'podcast';
  isbn?: string;
  language?: 'en'|'de'|'ar-LB'|'';
  pubYear?: number; // no bigint to prevent clashing with Zod's z.number().int() still technically typeof Number
  updatedYear?: number;
}

const Book = (props: CardProps) => {
  return (
    <article className="flex flex-nowrap space-x-1 font-dx-kord text-blue-violet {{isFavorite ? 'isFavorite' : '' }}">
      <div className={'omc-hex-tile bg-blue-violet p-0.5'}>
        <div className={'omc-hex-tile m-0 bg-blue-sky p-1'}>
          <h3 className="bg-pink-500">{props.title}</h3>
          <p>{props.description}</p>
          <p>Author: {props.author}</p>
          {!!props.isbn && <p>ISBN: {props.isbn}</p>}
          {!!props.pubYear && <p>{props.pubYear} {!!props.updatedYear && <div>updated: {props.updatedYear}</div>}</p>}
          {!!props.icon && <svg><use href="#symbol-{props.icon}" /></svg>}
          {!!props.language && <img src="images/languages/{props.language}.svg" alt="language: {props.language}" />}
      </div>
    </div>
  <div className="omc-hex-tile relative">Image:
    {!!props.coverUrl && (
      <img
        className="w-3xs max-w-full object-cover"
            src={`../images/books/${props.coverUrl}`}
            alt={`Cover of ${props.title}`}
          />
        )}
        <ToggleButton
          className="absolute right-[calc(50%-12px)] top-3 z-10"
          forTargetId={props.id}
          /* selected = isFavorite state, not of the card, but of the toggle */
          /* the actual state is in a global stateful ReadingList component synchronized with local storage */
          /* onChange={() => setSelected((prevSelected) => !prevSelected)} */ /* put that code inside the button component to ensure this Card component can be rendered statically */
        />
      </div>
    </article>
  );
};

export default Book;
