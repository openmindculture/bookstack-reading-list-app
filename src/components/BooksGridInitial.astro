---
// TODO How to read from Astro content collection files?
// TODO How to validate Astro data with imported TypeScript interface?
import BooksGrid from './BooksGrid';
import {
  getCollection,
  type CollectionEntry,
  type InferEntrySchema,
  z
} from 'astro:content';
import { bookSchema } from '../schemas/bookSchema';
const books: CollectionEntry<'book'>[] = (
  await getCollection(
    'book',
    ({ data }: { data: InferEntrySchema<'book'> }) => {
      return !!data.showOnHomepage;
    },
  )
).sort((a, b) => b.data.pubYear - a.data.pubYear);
const gridId = 'astro-grid-generated-id'; // TODO use uuid
type Book = z.infer<typeof bookSchema>;
// Validate and transform raw content data using Zod, add id from CollectionEntry
const validatedBooks: Book[] = books.map(bookEntry => {
  const validatedData = bookSchema.parse(bookEntry.data);
  return { id: bookEntry.id, ...validatedData };
});
// still gives  /app/index.html[InvalidComponentArgs] Invalid arguments passed to component.
// ^ only at build time
---
<BooksGrid gridId={gridId} books={validatedBooks} />
