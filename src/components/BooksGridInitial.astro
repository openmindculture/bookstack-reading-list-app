---
// TODO How to read from Astro content collection files?
// TODO How to validate Astro data with imported TypeScript interface?
import BooksGrid from './BooksGrid';
import {
  getCollection,
  type CollectionEntry,
  type InferEntrySchema,
  z
} from 'astro:content';
import { bookSchema } from '../schemas/bookSchema';
const books: CollectionEntry<'book'>[] = (
  await getCollection(
    'book',
    ({ data }: { data: InferEntrySchema<'book'> }) => {
      return !!data.showOnHomepage;
    },
  )
).sort((a, b) => b.data.pubYear - a.data.pubYear);
const gridId = 'astro-grid-generated-id'; // TODO use uuid
type Book = z.infer<typeof bookSchema>;
function pickBookFields(data: Book) {
  const { title, author, description, coverUrl, coverClassName, externalUrl, icon, isbn, language, pubYear, updatedYear, showOnHomepage } = data;
  return { title, author, description, coverUrl, coverClassName, externalUrl, icon, isbn, language, pubYear, updatedYear, showOnHomepage };
}
const bookDataArray = books.map(bookEntry => ({
  id: bookEntry.id,
  // ...bookEntry.data, caused invalid arguments exception
  // so need to add fields explicitly
  ...pickBookFields(bookEntry.data),
}));
---
<BooksGrid gridId={gridId} books={bookDataArray} />
