---
import "../styles/global.css";
export interface LayoutProps {
  title: string;
  // children: JSX.Element | JSX.Element[];
  // children: ReactNode // more flexible for mixed content
}

const { title } = Astro.props as LayoutProps;
---

<!doctype html>
<html lang="de">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title>{title}</title>
    <meta name="description" content="Eine moderne Lesezeichen-App fÃ¼r Webdesign, UX und Webentwicklung">
    <link rel="icon" type="image/svg+xml" href="/favicon.svg">
  </head>
  <body class="min-h-screen bg-blue-azure">
    <main class="container bg-blue-sky mx-auto px-4 py-8">
      <!-- Use <slot /> when working with Astro Layouts or Astro Components. It's specific to Astro's way of passing child content from a parent component or page. -->
      <slot />
      <!-- Renders child content passed from the parent -->
      <!-- Use {Astro.props.children} in framework components (e.g., React, Svelte, Vue) within Astro projects. These frameworks expect children to render nested content, which is different from <slot />. -->
      <!-- {Astro.props.children} -->
    </main>
  </body>
</html>
